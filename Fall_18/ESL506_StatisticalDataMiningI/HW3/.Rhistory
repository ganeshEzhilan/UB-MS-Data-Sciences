diabetes_train <- data[diabetes_train,]
diabetes_test <- data[diabetes_test,]
pairs(data[,1:5], main = "Diabetes Data", pch = 21, bg = c("red", "green3", "blue")[unclass(data$class)])
#SOLOTION 2, Part(a)
library(MASS)
#FITTING LDA MODEL
lda.fit = lda(diabetes_train$class~. , diabetes_train)
#predicting training set
lda.train.pred = predict(lda.fit, diabetes_train)
lda.train.accuracy = sum(lda.train.pred$class == diabetes_train$class)/length(lda.train.pred$class)
#Predicting test set
lda.test.pred = predict(lda.fit, diabetes_test)
lda.test.accuracy = sum(lda.test.pred$class == diabetes_test$class)/length(lda.test.pred$class)
cat("FITTING LDA MODEL:\n")
cat("Confusion Matrix for test data:")
table(lda.test.pred$class, diabetes_test$class)
cat("\n")
cat("Training Accuracy :", lda.train.accuracy)
cat("\n")
cat("Test Accuracy : ", lda.test.accuracy)
cat("\n")
#FITTING QDA MODEL
qda.fit = qda(diabetes_train$class~. , diabetes_train)
#predicting training set
qda.train.pred = predict(qda.fit, diabetes_train)
qda.train.accuracy = sum(qda.train.pred$class == diabetes_train$class)/length(qda.train.pred$class)
#Predicting test set
qda.test.pred = predict(qda.fit, diabetes_test)
qda.test.accuracy = sum(qda.test.pred$class == diabetes_test$class)/length(qda.test.pred$class)
cat("FITTING QDA MODEL:\n")
cat("QDA Confusion Matrix for test data:")
table(qda.test.pred$class, diabetes_test$class)
cat("\n")
cat("QDA Training Accuracy :", qda.train.accuracy)
cat("\n")
cat("QDA Test Accuracy : ", qda.test.accuracy)
#SOLUTION 2, Part(b)
test.frame = data.frame(glucose_area=(0.98),insulin_area=(122),SSPG=(544),relative_weight=(186),fasting_plasma_glucose=(184))
cat("The posterior probabilities for the data is :\n")
predict(lda.fit, test.frame)$posterior
cat("The posterior probabilities for the data is :\n")
predict(qda.fit, test.frame)$posterior
cat("And the class predicted by QDA is : 2")
rm(list = ls())
data = read.table('/Users/abhishekkumar/Documents/MS_UB/Fall_18/ESL506_StatisticalDataMiningI/HW3/DiabetesAndrews36_1.txt', header = FALSE)
data = subset(data, select = -c(1,2,3,4))
names(data) <- c("glucose_area", "insulin_area", "SSPG", "relative_weight", "fasting_plasma_glucose","class")
data$class = as.factor(data$class)
diabetes_train <- sample(1:nrow(data), round(nrow(data)*0.75))
diabetes_test <- -diabetes_train
diabetes_train <- data[diabetes_train,]
diabetes_test <- data[diabetes_test,]
pairs(data[,1:5], upper.panel =NULL, main = "Diabetes Data", pch = 21, bg = c("red", "green3", "blue")[unclass(data$class)])
#SOLOTION 2, Part(a)
library(MASS)
#FITTING LDA MODEL
lda.fit = lda(diabetes_train$class~. , diabetes_train)
#predicting training set
lda.train.pred = predict(lda.fit, diabetes_train)
lda.train.accuracy = sum(lda.train.pred$class == diabetes_train$class)/length(lda.train.pred$class)
#Predicting test set
lda.test.pred = predict(lda.fit, diabetes_test)
lda.test.accuracy = sum(lda.test.pred$class == diabetes_test$class)/length(lda.test.pred$class)
cat("FITTING LDA MODEL:\n")
cat("Confusion Matrix for test data:")
table(lda.test.pred$class, diabetes_test$class)
cat("\n")
cat("Training Accuracy :", lda.train.accuracy)
cat("\n")
cat("Test Accuracy : ", lda.test.accuracy)
cat("\n")
#FITTING QDA MODEL
qda.fit = qda(diabetes_train$class~. , diabetes_train)
#predicting training set
qda.train.pred = predict(qda.fit, diabetes_train)
qda.train.accuracy = sum(qda.train.pred$class == diabetes_train$class)/length(qda.train.pred$class)
#Predicting test set
qda.test.pred = predict(qda.fit, diabetes_test)
qda.test.accuracy = sum(qda.test.pred$class == diabetes_test$class)/length(qda.test.pred$class)
cat("FITTING QDA MODEL:\n")
cat("QDA Confusion Matrix for test data:")
table(qda.test.pred$class, diabetes_test$class)
cat("\n")
cat("QDA Training Accuracy :", qda.train.accuracy)
cat("\n")
cat("QDA Test Accuracy : ", qda.test.accuracy)
#SOLUTION 2, Part(b)
test.frame = data.frame(glucose_area=(0.98),insulin_area=(122),SSPG=(544),relative_weight=(186),fasting_plasma_glucose=(184))
cat("The posterior probabilities for the data is :\n")
predict(lda.fit, test.frame)$posterior
cat("The posterior probabilities for the data is :\n")
predict(qda.fit, test.frame)$posterior
cat("And the class predicted by QDA is : 2")
rm(list = ls())
data = read.table('/Users/abhishekkumar/Documents/MS_UB/Fall_18/ESL506_StatisticalDataMiningI/HW3/DiabetesAndrews36_1.txt', header = FALSE)
data = subset(data, select = -c(1,2,3,4))
names(data) <- c("glucose_area", "insulin_area", "SSPG", "relative_weight", "fasting_plasma_glucose","class")
data$class = as.factor(data$class)
diabetes_train <- sample(1:nrow(data), round(nrow(data)*0.75))
diabetes_test <- -diabetes_train
diabetes_train <- data[diabetes_train,]
diabetes_test <- data[diabetes_test,]
pairs(data[,1:5], upper.panel =NULL, cex.labels = c("a","b", "c") ,main = "Diabetes Data", pch = 21, bg = c("red", "green3", "blue")[unclass(data$class)])
rm(list = ls())
data = read.table('/Users/abhishekkumar/Documents/MS_UB/Fall_18/ESL506_StatisticalDataMiningI/HW3/DiabetesAndrews36_1.txt', header = FALSE)
data = subset(data, select = -c(1,2,3,4))
names(data) <- c("glucose_area", "insulin_area", "SSPG", "relative_weight", "fasting_plasma_glucose","class")
data$class = as.factor(data$class)
diabetes_train <- sample(1:nrow(data), round(nrow(data)*0.75))
diabetes_test <- -diabetes_train
diabetes_train <- data[diabetes_train,]
diabetes_test <- data[diabetes_test,]
pairs(data[,1:5], upper.panel =NULL ,main = "Diabetes Data", pch = 21, bg = c("red", "green3", "blue")[unclass(data$class)])
#SOLUTION 2, Part(c)
test.frame = data.frame(glucose_area=(0.98),insulin_area=(122),SSPG=(544),relative_weight=(186),fasting_plasma_glucose=(184))
cat("The posterior probabilities for the data is :\n")
predict(lda.fit, test.frame)$posterior
#SOLOTION 2, Part(a)
library(MASS)
#FITTING LDA MODEL
lda.fit = lda(diabetes_train$class~. , diabetes_train)
#predicting training set
lda.train.pred = predict(lda.fit, diabetes_train)
lda.train.accuracy = sum(lda.train.pred$class == diabetes_train$class)/length(lda.train.pred$class)
#Predicting test set
lda.test.pred = predict(lda.fit, diabetes_test)
lda.test.accuracy = sum(lda.test.pred$class == diabetes_test$class)/length(lda.test.pred$class)
cat("FITTING LDA MODEL:\n")
cat("Confusion Matrix for test data:")
table(lda.test.pred$class, diabetes_test$class)
cat("\n")
cat("Training Accuracy :", lda.train.accuracy)
cat("\n")
cat("Test Accuracy : ", lda.test.accuracy)
cat("\n")
#FITTING QDA MODEL
qda.fit = qda(diabetes_train$class~. , diabetes_train)
#predicting training set
qda.train.pred = predict(qda.fit, diabetes_train)
qda.train.accuracy = sum(qda.train.pred$class == diabetes_train$class)/length(qda.train.pred$class)
#Predicting test set
qda.test.pred = predict(qda.fit, diabetes_test)
qda.test.accuracy = sum(qda.test.pred$class == diabetes_test$class)/length(qda.test.pred$class)
cat("FITTING QDA MODEL:\n")
cat("QDA Confusion Matrix for test data:")
table(qda.test.pred$class, diabetes_test$class)
cat("\n")
cat("QDA Training Accuracy :", qda.train.accuracy)
cat("\n")
cat("QDA Test Accuracy : ", qda.test.accuracy)
#SOLUTION 2, Part(c)
test.frame = data.frame(glucose_area=(0.98),insulin_area=(122),SSPG=(544),relative_weight=(186),fasting_plasma_glucose=(184))
cat("The posterior probabilities for the data is :\n")
predict(lda.fit, test.frame)$posterior
cat("And the class predicted by QDA is : 3")
cat("The posterior probabilities for the data is :\n")
predict(qda.fit, test.frame)$posterior
cat("And the class predicted by QDA is : 2")
#SOLUTION 2, Part(c)
test.frame = data.frame(glucose_area=(0.98),insulin_area=(122),SSPG=(544),relative_weight=(186),fasting_plasma_glucose=(184))
cat("The posterior probabilities for the data is :\n")
predict(lda.fit, test.frame)$posterior
cat("And the class predicted by QDA is : 3")
cat("\n")
cat("The posterior probabilities for the data is :\n")
predict(qda.fit, test.frame)$posterior
cat("And the class predicted by QDA is : 2")
rm(list = ls())
data = read.table('/Users/abhishekkumar/Documents/MS_UB/Fall_18/ESL506_StatisticalDataMiningI/HW3/DiabetesAndrews36_1.txt', header = FALSE)
data = subset(data, select = -c(1,2,3,4))
names(data) <- c("glucose_area", "insulin_area", "SSPG", "relative_weight", "fasting_plasma_glucose","class")
data$class = as.factor(data$class)
diabetes_train <- sample(1:nrow(data), round(nrow(data)*0.75))
diabetes_test <- -diabetes_train
diabetes_train <- data[diabetes_train,]
diabetes_test <- data[diabetes_test,]
pairs(data[,1:5], upper.panel =NULL ,main = "Diabetes Data", pch = 21, bg = c("red", "green3", "blue")[unclass(data$class)])
#SOLOTION 2, Part(a)
library(MASS)
#FITTING LDA MODEL
lda.fit = lda(diabetes_train$class~. , diabetes_train)
#predicting training set
lda.train.pred = predict(lda.fit, diabetes_train)
lda.train.accuracy = sum(lda.train.pred$class == diabetes_train$class)/length(lda.train.pred$class)
#Predicting test set
lda.test.pred = predict(lda.fit, diabetes_test)
lda.test.accuracy = sum(lda.test.pred$class == diabetes_test$class)/length(lda.test.pred$class)
cat("FITTING LDA MODEL:\n")
cat("Confusion Matrix for test data:")
table(lda.test.pred$class, diabetes_test$class)
cat("\n")
cat("Training Accuracy :", lda.train.accuracy)
cat("\n")
cat("Test Accuracy : ", lda.test.accuracy)
cat("\n")
#FITTING QDA MODEL
qda.fit = qda(diabetes_train$class~. , diabetes_train)
#predicting training set
qda.train.pred = predict(qda.fit, diabetes_train)
qda.train.accuracy = sum(qda.train.pred$class == diabetes_train$class)/length(qda.train.pred$class)
#Predicting test set
qda.test.pred = predict(qda.fit, diabetes_test)
qda.test.accuracy = sum(qda.test.pred$class == diabetes_test$class)/length(qda.test.pred$class)
cat("FITTING QDA MODEL:\n")
cat("QDA Confusion Matrix for test data:")
table(qda.test.pred$class, diabetes_test$class)
cat("\n")
cat("QDA Training Accuracy :", qda.train.accuracy)
cat("\n")
cat("QDA Test Accuracy : ", qda.test.accuracy)
rm(list = ls())
data = read.table('/Users/abhishekkumar/Documents/MS_UB/Fall_18/ESL506_StatisticalDataMiningI/HW3/DiabetesAndrews36_1.txt', header = FALSE)
data = subset(data, select = -c(1,2,3,4))
names(data) <- c("glucose_area", "insulin_area", "SSPG", "relative_weight", "fasting_plasma_glucose","class")
data$class = as.factor(data$class)
diabetes_train <- sample(1:nrow(data), round(nrow(data)*0.75))
diabetes_test <- -diabetes_train
diabetes_train <- data[diabetes_train,]
diabetes_test <- data[diabetes_test,]
pairs(data[,1:5], upper.panel =NULL ,main = "Diabetes Data", pch = 21, bg = c("red", "green3", "blue")[unclass(data$class)])
#SOLOTION 2, Part(a)
library(MASS)
#FITTING LDA MODEL
lda.fit = lda(diabetes_train$class~. , diabetes_train)
#predicting training set
lda.train.pred = predict(lda.fit, diabetes_train)
lda.train.accuracy = sum(lda.train.pred$class == diabetes_train$class)/length(lda.train.pred$class)
#Predicting test set
lda.test.pred = predict(lda.fit, diabetes_test)
lda.test.accuracy = sum(lda.test.pred$class == diabetes_test$class)/length(lda.test.pred$class)
cat("FITTING LDA MODEL:\n")
cat("Confusion Matrix for test data:")
table(lda.test.pred$class, diabetes_test$class)
cat("\n")
cat("Training Accuracy :", lda.train.accuracy)
cat("\n")
cat("Test Accuracy : ", lda.test.accuracy)
cat("\n")
#FITTING QDA MODEL
qda.fit = qda(diabetes_train$class~. , diabetes_train)
#predicting training set
qda.train.pred = predict(qda.fit, diabetes_train)
qda.train.accuracy = sum(qda.train.pred$class == diabetes_train$class)/length(qda.train.pred$class)
#Predicting test set
qda.test.pred = predict(qda.fit, diabetes_test)
qda.test.accuracy = sum(qda.test.pred$class == diabetes_test$class)/length(qda.test.pred$class)
cat("FITTING QDA MODEL:\n")
cat("QDA Confusion Matrix for test data:")
table(qda.test.pred$class, diabetes_test$class)
cat("\n")
cat("QDA Training Accuracy :", qda.train.accuracy)
cat("\n")
cat("QDA Test Accuracy : ", qda.test.accuracy)
library(MVN)
subset(data, class =1)
subset(data = data, class =1)
data1 = data1
data1 = data
subset(data = data1, class =1)
subset(data = data1, class == 1)
subset(data, class == 1)
mvn(subset(data, class == 1), mvnTest = "mardia")
mvn(subset(data, class == 1, select= -c(class)), mvnTest = "mardia")
mvn(subset(data, class == 2, select= -c(class)), mvnTest = "mardia")
mvn(subset(data, class == 3, select= -c(class)), mvnTest = "mardia")
mvn(subset(data, select= -c(class)), mvnTest = "mardia")
cat("Multivariate test for class 1")
mvn(subset(data, class == 1, select= -c(class)), mvnTest = "mardia")
cat("\n")
cat("Multivariate test for class 1")
mvn(subset(data, class == 2, select= -c(class)), mvnTest = "mardia")
cat("\n")
cat("Multivariate test for class 1")
mvn(subset(data, class == 3, select= -c(class)), mvnTest = "mardia")
cat("\n")
cat("Multivariate test for class 1")
mvn(subset(data, class == 1, select= -c(class)), mvnTest = "mardia")$multivariateNormality
cat("\n")
cat("Multivariate test for class 1")
mvn(subset(data, class == 2, select= -c(class)), mvnTest = "mardia")$multivariateNormality
cat("\n")
cat("Multivariate test for class 1")
mvn(subset(data, class == 3, select= -c(class)), mvnTest = "mardia")$multivariateNormality
cat("\n")
library(MVN)
cat("Multivariate test for class 1")
mvn(subset(data, class == 1, select= -c(class)), mvnTest = "mardia")$multivariateNormality
cat("\n")
cat("Multivariate test for class 1")
mvn(subset(data, class == 2, select= -c(class)), mvnTest = "mardia")$multivariateNormality
cat("\n")
cat("Multivariate test for class 1")
mvn(subset(data, class == 3, select= -c(class)), mvnTest = "mardia")$multivariateNormality
cat("\n")
lda.predict = predict(lda.fit, test.frame)
#SOLUTION 2, Part(c)
test.frame = data.frame(glucose_area=(0.98),insulin_area=(122),SSPG=(544),relative_weight=(186),fasting_plasma_glucose=(184))
cat("The posterior probabilities for the data is :\n")
lda.predict = predict(lda.fit, test.frame)
lda.predict$
cat("And the class predicted by QDA is : ",)
#SOLUTION 2, Part(c)
test.frame = data.frame(glucose_area=(0.98),insulin_area=(122),SSPG=(544),relative_weight=(186),fasting_plasma_glucose=(184))
cat("The posterior probabilities for the data is :\n")
lda.predict = predict(lda.fit, test.frame)
lda.predict$posterior
cat("And the class predicted by QDA is : ",lda.predict$class)
cat("\n")
cat("The posterior probabilities for the data is :\n")
qda.predict = predict(qda.fit, test.frame)
qda.predict$posterior
cat("And the class predicted by QDA is : ", qda.predict$class)
source('~/.active-rstudio-document', echo=TRUE)
?pairs
rm(list = ls())
data = read.table('/Users/abhishekkumar/Documents/MS_UB/Fall_18/ESL506_StatisticalDataMiningI/HW3/DiabetesAndrews36_1.txt', header = FALSE)
data = subset(data, select = -c(1,2,3,4))
names(data) <- c("glucose_area", "insulin_area", "SSPG", "relative_weight", "fasting_plasma_glucose","class")
data$class = as.factor(data$class)
diabetes_train <- sample(1:nrow(data), round(nrow(data)*0.75))
diabetes_test <- -diabetes_train
diabetes_train <- data[diabetes_train,]
diabetes_test <- data[diabetes_test,]
pairs(data[,1:5], upper.panel =NULL ,main = "Diabetes Data", pch = 21, bg = c("red", "green3", "blue","yellow")[unclass(data$class)])
rm(list = ls())
data = read.table('/Users/abhishekkumar/Documents/MS_UB/Fall_18/ESL506_StatisticalDataMiningI/HW3/DiabetesAndrews36_1.txt', header = FALSE)
data = subset(data, select = -c(1,2,3,4))
names(data) <- c("glucose_area", "insulin_area", "SSPG", "relative_weight", "fasting_plasma_glucose","class")
data$class = as.factor(data$class)
diabetes_train <- sample(1:nrow(data), round(nrow(data)*0.75))
diabetes_test <- -diabetes_train
diabetes_train <- data[diabetes_train,]
diabetes_test <- data[diabetes_test,]
pairs(data[,1:5], upper.panel =NULL ,main = "Diabetes Data", pch = 21, bg = c("red", "green3", "blue","yellow")[unclass(data$class)])
?pairs
rm(list = ls())
data = read.table('/Users/abhishekkumar/Documents/MS_UB/Fall_18/ESL506_StatisticalDataMiningI/HW3/DiabetesAndrews36_1.txt', header = FALSE)
data = subset(data, select = -c(1,2,3,4))
names(data) <- c("glucose_area", "insulin_area", "SSPG", "relative_weight", "fasting_plasma_glucose","class")
data$class = as.factor(data$class)
diabetes_train <- sample(1:nrow(data), round(nrow(data)*0.75))
diabetes_test <- -diabetes_train
diabetes_train <- data[diabetes_train,]
diabetes_test <- data[diabetes_test,]
pairs(data[,1:5], upper.panel =NULL ,main = "Diabetes Data", pch = 21, bg = c("red", "green3", "blue")[unclass(data$class)])
legend(locator(),legend=levels(data$class), pt.bg =  c("red",
"green3", "blue"), pch=21)
rm(list = ls())
data = read.table('/Users/abhishekkumar/Documents/MS_UB/Fall_18/ESL506_StatisticalDataMiningI/HW3/DiabetesAndrews36_1.txt', header = FALSE)
data = subset(data, select = -c(1,2,3,4))
names(data) <- c("glucose_area", "insulin_area", "SSPG", "relative_weight", "fasting_plasma_glucose","class")
data$class = as.factor(data$class)
diabetes_train <- sample(1:nrow(data), round(nrow(data)*0.75))
diabetes_test <- -diabetes_train
diabetes_train <- data[diabetes_train,]
diabetes_test <- data[diabetes_test,]
pairs(data[,1:5], upper.panel =NULL ,main = "Diabetes Data", pch = 21, bg = c("red", "green3", "blue")[unclass(data$class)], legend(locator(),legend=levels(data$class), pt.bg =  c("red",
"green3", "blue"), pch=21))
?pch
?pch
rm(list = ls())
data = read.table('/Users/abhishekkumar/Documents/MS_UB/Fall_18/ESL506_StatisticalDataMiningI/HW3/DiabetesAndrews36_1.txt', header = FALSE)
data = subset(data, select = -c(1,2,3,4))
names(data) <- c("glucose_area", "insulin_area", "SSPG", "relative_weight", "fasting_plasma_glucose","class")
data$class = as.factor(data$class)
diabetes_train <- sample(1:nrow(data), round(nrow(data)*0.75))
diabetes_test <- -diabetes_train
diabetes_train <- data[diabetes_train,]
diabetes_test <- data[diabetes_test,]
pairs(data[,1:5], upper.panel =NULL ,main = "Diabetes Data", pch = 21, bg = c("red", "green3", "blue")[unclass(data$class)])
legend("bottomleft",
legend = c("Group 1", "Group 2", "g3"))
rm(list = ls())
data = read.table('/Users/abhishekkumar/Documents/MS_UB/Fall_18/ESL506_StatisticalDataMiningI/HW3/DiabetesAndrews36_1.txt', header = FALSE)
data = subset(data, select = -c(1,2,3,4))
names(data) <- c("glucose_area", "insulin_area", "SSPG", "relative_weight", "fasting_plasma_glucose","class")
data$class = as.factor(data$class)
diabetes_train <- sample(1:nrow(data), round(nrow(data)*0.75))
diabetes_test <- -diabetes_train
diabetes_train <- data[diabetes_train,]
diabetes_test <- data[diabetes_test,]
pairs(data[,1:5], upper.panel =NULL ,main = "Diabetes Data", pch = 21, bg = c("red", "green3", "blue")[unclass(data$class)])
legend("topright",
legend = c("Group 1", "Group 2", "g3"))
rm(list = ls())
data = read.table('/Users/abhishekkumar/Documents/MS_UB/Fall_18/ESL506_StatisticalDataMiningI/HW3/DiabetesAndrews36_1.txt', header = FALSE)
data = subset(data, select = -c(1,2,3,4))
names(data) <- c("glucose_area", "insulin_area", "SSPG", "relative_weight", "fasting_plasma_glucose","class")
data$class = as.factor(data$class)
diabetes_train <- sample(1:nrow(data), round(nrow(data)*0.75))
diabetes_test <- -diabetes_train
diabetes_train <- data[diabetes_train,]
diabetes_test <- data[diabetes_test,]
pairs(data[,1:5], upper.panel =NULL ,main = "Diabetes Data", pch = 21, bg = c("red", "green3", "blue")[unclass(data$class)])
legend("topright",
legend = c("Group 1", "Group 2", "g3"), col = c("red", "green3","blue"))
rm(list = ls())
data = read.table('/Users/abhishekkumar/Documents/MS_UB/Fall_18/ESL506_StatisticalDataMiningI/HW3/DiabetesAndrews36_1.txt', header = FALSE)
data = subset(data, select = -c(1,2,3,4))
names(data) <- c("glucose_area", "insulin_area", "SSPG", "relative_weight", "fasting_plasma_glucose","class")
data$class = as.factor(data$class)
diabetes_train <- sample(1:nrow(data), round(nrow(data)*0.75))
diabetes_test <- -diabetes_train
diabetes_train <- data[diabetes_train,]
diabetes_test <- data[diabetes_test,]
pairs(data[,1:5], upper.panel =NULL ,main = "Diabetes Data", pch = 21, bg = c("red", "green3", "blue")[unclass(data$class)])
legend("topright",
legend = c("Group 1", "Group 2", "g3"), col = c("red", "green3","blue"), bty = "n")
rm(list = ls())
data = read.table('/Users/abhishekkumar/Documents/MS_UB/Fall_18/ESL506_StatisticalDataMiningI/HW3/DiabetesAndrews36_1.txt', header = FALSE)
data = subset(data, select = -c(1,2,3,4))
names(data) <- c("glucose_area", "insulin_area", "SSPG", "relative_weight", "fasting_plasma_glucose","class")
data$class = as.factor(data$class)
diabetes_train <- sample(1:nrow(data), round(nrow(data)*0.75))
diabetes_test <- -diabetes_train
diabetes_train <- data[diabetes_train,]
diabetes_test <- data[diabetes_test,]
pairs(data[,1:5], upper.panel =NULL ,main = "Diabetes Data", pch = 21, bg = c("red", "green3", "blue")[unclass(data$class)])
legend("topright",
legend = c("Group 1", "Group 2", "g3"), col = data$class, bty = "n")
rm(list = ls())
data = read.table('/Users/abhishekkumar/Documents/MS_UB/Fall_18/ESL506_StatisticalDataMiningI/HW3/DiabetesAndrews36_1.txt', header = FALSE)
data = subset(data, select = -c(1,2,3,4))
names(data) <- c("glucose_area", "insulin_area", "SSPG", "relative_weight", "fasting_plasma_glucose","class")
data$class = as.factor(data$class)
diabetes_train <- sample(1:nrow(data), round(nrow(data)*0.75))
diabetes_test <- -diabetes_train
diabetes_train <- data[diabetes_train,]
diabetes_test <- data[diabetes_test,]
pairs(data[,1:5], upper.panel =NULL ,main = "Diabetes Data", pch = 21, bg = c("red", "green3", "blue")[unclass(data$class)])
legend("topright",
legend = c("Group 1", "Group 2", "g3"), col = data$class, bty = "n", pch = c(21,21,21))
rm(list = ls())
data = read.table('/Users/abhishekkumar/Documents/MS_UB/Fall_18/ESL506_StatisticalDataMiningI/HW3/DiabetesAndrews36_1.txt', header = FALSE)
data = subset(data, select = -c(1,2,3,4))
names(data) <- c("glucose_area", "insulin_area", "SSPG", "relative_weight", "fasting_plasma_glucose","class")
data$class = as.factor(data$class)
diabetes_train <- sample(1:nrow(data), round(nrow(data)*0.75))
diabetes_test <- -diabetes_train
diabetes_train <- data[diabetes_train,]
diabetes_test <- data[diabetes_test,]
pairs(data[,1:5], upper.panel =NULL ,main = "Diabetes Data", pch = 21, bg = c("red", "green3", "blue")[unclass(data$class)])
legend("topright",
legend = c("Group 1", "Group 2", "g3"), col = c("red", "green3", "blue"), bty = "n", pch = c(21,21,21))
rm(list = ls())
data = read.table('/Users/abhishekkumar/Documents/MS_UB/Fall_18/ESL506_StatisticalDataMiningI/HW3/DiabetesAndrews36_1.txt', header = FALSE)
data = subset(data, select = -c(1,2,3,4))
names(data) <- c("glucose_area", "insulin_area", "SSPG", "relative_weight", "fasting_plasma_glucose","class")
data$class = as.factor(data$class)
diabetes_train <- sample(1:nrow(data), round(nrow(data)*0.75))
diabetes_test <- -diabetes_train
diabetes_train <- data[diabetes_train,]
diabetes_test <- data[diabetes_test,]
pairs(data[,1:5], upper.panel =NULL ,main = "Diabetes Data", pch = 21, bg = c("red", "green3", "blue")[unclass(data$class)])
legend("topright",
legend = c("Group 1", "Group 2", "g3"), col = c("red", "green3", "blue"), bty = "n", pch = c(1,21,21))
?pch
rm(list = ls())
data = read.table('/Users/abhishekkumar/Documents/MS_UB/Fall_18/ESL506_StatisticalDataMiningI/HW3/DiabetesAndrews36_1.txt', header = FALSE)
data = subset(data, select = -c(1,2,3,4))
names(data) <- c("glucose_area", "insulin_area", "SSPG", "relative_weight", "fasting_plasma_glucose","class")
data$class = as.factor(data$class)
diabetes_train <- sample(1:nrow(data), round(nrow(data)*0.75))
diabetes_test <- -diabetes_train
diabetes_train <- data[diabetes_train,]
diabetes_test <- data[diabetes_test,]
pairs(data[,1:5], upper.panel =NULL ,main = "Diabetes Data", pch = 21, bg = c("red", "green3", "blue")[unclass(data$class)])
legend("topright",
legend = c("Group 1", "Group 2", "g3"), col = c("red", "green3", "blue"), bty = "n", pch = c(16,21,21))
rm(list = ls())
data = read.table('/Users/abhishekkumar/Documents/MS_UB/Fall_18/ESL506_StatisticalDataMiningI/HW3/DiabetesAndrews36_1.txt', header = FALSE)
data = subset(data, select = -c(1,2,3,4))
names(data) <- c("glucose_area", "insulin_area", "SSPG", "relative_weight", "fasting_plasma_glucose","class")
data$class = as.factor(data$class)
diabetes_train <- sample(1:nrow(data), round(nrow(data)*0.75))
diabetes_test <- -diabetes_train
diabetes_train <- data[diabetes_train,]
diabetes_test <- data[diabetes_test,]
pairs(data[,1:5], upper.panel =NULL ,main = "Diabetes Data", pch = 21, bg = c("red", "green3", "blue")[unclass(data$class)])
legend("topright",
legend = c("Group 1", "Group 2", "g3"), col = c("red", "green3", "blue"), bty = "n", pch = c(16,16,16))
View(data)
max(data$insulin_area)
subset(data, data$insulin_area==352)
subset(data, data$insulin_area==353)
subset(data, data$relative_weight==353)
max(data$relative_weight)
subset(data, data$relative_weight==748)
rm(list = ls())
data = read.table('/Users/abhishekkumar/Documents/MS_UB/Fall_18/ESL506_StatisticalDataMiningI/HW3/DiabetesAndrews36_1.txt', header = FALSE)
data = subset(data, select = -c(1,2,3,4))
names(data) <- c("glucose_area", "insulin_area", "SSPG", "relative_weight", "fasting_plasma_glucose","class")
data$class = as.factor(data$class)
diabetes_train <- sample(1:nrow(data), round(nrow(data)*0.75))
diabetes_test <- -diabetes_train
diabetes_train <- data[diabetes_train,]
diabetes_test <- data[diabetes_test,]
pairs(data[,1:5], upper.panel =NULL ,main = "Diabetes Data", pch = 21, bg = c("red", "green3", "blue")[unclass(data$class)])
legend("topright",
legend = c("Class 1", "Class 2", "Class 3"), col = c("red", "green3", "blue"), bty = "n", pch = c(16,16,16))
rm(list = ls())
data = read.table('/Users/abhishekkumar/Documents/MS_UB/Fall_18/ESL506_StatisticalDataMiningI/HW3/DiabetesAndrews36_1.txt', header = FALSE)
data = subset(data, select = -c(1,2,3,4))
names(data) <- c("glucose_area", "insulin_area", "SSPG", "relative_weight", "fasting_plasma_glucose","class")
data$class = as.factor(data$class)
diabetes_train <- sample(1:nrow(data), round(nrow(data)*0.75))
diabetes_test <- -diabetes_train
diabetes_train <- data[diabetes_train,]
diabetes_test <- data[diabetes_test,]
pairs(data[,1:5], upper.panel =NULL ,main = "Diabetes Data", pch = 21, bg = c("red", "green3", "blue")[unclass(data$class)])
legend("topright",
legend = c("Class 1", "Class 2", "Class 3"), col = c("red", "green3", "blue"), bty = "n", pch = c(16,16,16), inset = c(0.1, 0.1) )
