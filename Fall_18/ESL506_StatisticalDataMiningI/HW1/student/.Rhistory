ggplot(d3, aes(x = sex, y = G1.x))+ geom_boxplot(aes(colour = as.factor(sex)))+ labs( x = "Sex", y = "Grades in Math")
higher_x <- ggplot(d3, aes(x = as.factor(higher.x), y = G1.x))+ geom_boxplot(aes(colour = as.factor(higher.x)))+ labs(x = "wants to take higher education", y = NULL)
ggplot(d3, aes(x = as.factor(higher.x), y = G1.x))+ geom_boxplot(aes(colour = as.factor(higher.x)))+ labs(x = "wants to take higher education", y = NULL)
ggplot(d3, aes(x = as.factor(schoolsup.x), y = G1.x))+ geom_boxplot(aes(colour = as.factor(schoolsup_x))) + labs(x = "Extra education support", y = "First Period Grades in Maths")
ggplot(d3, aes(x = as.factor(schoolsup.x), y = G1.x))+ geom_boxplot(aes(colour = as.factor(schoolsup_x))) + labs(x = "Extra education support", y = "First Period Grades in Maths")
ggplot(d3, aes(x = as.factor(schoolsup.x), y = G1.x))+ geom_boxplot() + labs(x = "Extra education support", y = "First Period Grades in Maths")
ggplot(d3, aes(x = as.factor(schoolsup.x), y = G1.x))+ geom_boxplot(aes(colour = as.factor(schoolsup.x))) + labs(x = "Extra education support", y = "First Period Grades in Maths")
failures_y <- ggplot(d3, aes(x = as.factor(failures.y), y = G1.y))+ geom_boxplot(aes(color = as.factor(failures.x))) + labs(x = "No. of past failures", y = "First Period Grades in Maths")
higher_y <- ggplot(d3, aes(x = as.factor(higher.y), y = G1.y))+ geom_boxplot(aes(as.factor(higher.y)))+ labs(x = "Wants to take higher education", y = NULL)
grid.arrange(failures_y, higher_y, ncol=2, bottom=NULL)
failures_y <- ggplot(d3, aes(x = as.factor(failures.y), y = G1.y))+ geom_boxplot(aes(color = as.factor(failures.x))) + labs(x = "No. of past failures", y = "First Period Grades in Maths")
higher_y <- ggplot(d3, aes(x = as.factor(higher.y), y = G1.y))+ geom_boxplot(aes(as.factor(higher.y)))+ labs(x = "Wants to take higher education", y = NULL)
grid.arrange(failures_y, higher_y, ncol=2, bottom=NULL)
failures_y <- ggplot(d3, aes(x = as.factor(failures.y), y = G1.y))+ geom_boxplot(aes(color = as.factor(failures.x))) + labs(x = "No. of past failures", y = "First Period Grades in Maths")
higher_y <- ggplot(d3, aes(x = as.factor(higher.y), y = G1.y))+ geom_boxplot(aes(as.factor(higher.y)))+ labs(x = "Wants to take higher education", y = NULL)
grid.arrange(failures_y, higher_y, ncol=2, bottom=NULL)
failures_y <- ggplot(d3, aes(x = as.factor(failures.y), y = G1.y))+ geom_boxplot() + labs(x = "No. of past failures", y = "First Period Grades in Maths")
ggplot(d3, aes(x = as.factor(failures.y), y = G1.y))+ geom_boxplot() + labs(x = "No. of past failures", y = "First Period Grades in Maths")
ggplot(d3, aes(x = as.factor(higher.y), y = G1.y))+ geom_boxplot(aes(as.factor(higher.y)))+ labs(x = "Wants to take higher education", y = NULL)
ggplot(d3, aes(x = as.factor(failures.y), y = G1.y))+ geom_boxplot(a) + labs(x = "No. of past failures", y = "First Period Grades in Maths")
ggplot(d3, aes(x = as.factor(higher.y), y = G1.y))+ geom_boxplot(aes(as.factor(higher.y)))+ labs(x = "Wants to take higher education", y = NULL)
ggplot(data = d3, aes(x = G1.x, y = d3$absences.x)) + geom_point(aes(color=absences.x), alpha = 0.2)
d3_all <- merge(d1, d2, all = TRUE)
names(d3_all)
d3_controlled <- d3_all[-c(20,22,29, 32,33)]
getwd()
save(d3_controlled,file="controlled.Rda")
summary(d3_all_1_model)
d3_all_1_model <- lm(G1 ~ ., data = d3_all_1)
d3_originalData <- d3_all[-c(32,33)]
d3_controlled <- d3_all[-c(20,22,29)]
model_originalData <- lm(G1 ~ ., data = d3_originalData)
summary(model_originalData)
model_controlledData <- lm(G1 ~ ., data = d3_controlled)
summary(model_controlledData)
d3_controlled <- d3_all[-c(20,22,29,32,33)]
save(d3_controlled, file = "controlled.Rda")
model_controlledData <- lm(G1 ~ ., data = d3_controlled)
summary(model_controlledData)
View(model_controlledData)
View(d3_controlled)
View(model_controlledData)
plot(model_controlledData)
model_controlledData <- lm(G1 ~ ., data = d3_controlled)
summary(model_controlledData)
rm()
rm(.)
library(ElemStatLearn)
zipcode_train <- as.data.frame(zip.train)
zipcode_test <- as.data.frame(zip.test)
View(zipcode_train)
zipcode_train_working <- subset(zipcode_train, V1=2 | v1 = 3)
zipcode_train_working <- subset(zipcode_train, V1==2 | v1 == 3)
zipcode_train_working <- subset(zipcode_train, V1==2 | V1 == 3)
View(zipcode_train_working)
View(zipcode_test)
zipcode_train_working[, 1] <- as.factor(zipcode_train_working[, 1])
levels(zipcode_train_working[, 1])
View(zipcode_train_working)
summary(zipcode_train_working)
summary(zipcode_train_working[1:2,])
?image
im <- matrix(as.numeric(zipcode_train_working[4,2:257]), nrow = 16, ncol = 16)
image(t(apply(-im,1,rev)),col=gray((0:32)/32))
zipcode_test_working <- subset(zipcode_train, V1==2 | V1 == 3)
zipcode_train_working[, 1] <- as.factor(zipcode_train_working[, 1])
zipcode_test_working[, 1] <- as.factor(zipcode_test_working[, 1])
knearn<-knn(zipcode_train_working, zipcode_test_working, zipcode_train_working$V1, k = 4, l = 0, prob = FALSE, use.all = TRUE)
library(class)
knearn<-knn(zipcode_train_working, zipcode_test_working, zipcode_train_working$V1, k = 4, l = 0, prob = FALSE, use.all = TRUE)
sum((knearn==zipTest$V1)*1.0)
sum((knearn==zipcode_test_working$V1)*1.0)
sum((knearn==zipcode_test_working$V1))
sum(knearn==zipcode_test_working$V1)
View(im)
i <- im[,2:]
i <- im[,2:16]
View(i)
rm(i)
zipcode_train_working <- subset(zipcode_train, V1==2 | V1 == 3)
zipcode_test_working <- subset(zipcode_test, V1==2 | V1 == 3)
zipcode_train_working[, 1] <- as.factor(zipcode_train_working[, 1])
zipcode_test_working[, 1] <- as.factor(zipcode_test_working[, 1])
knearn<-knn(zipcode_train_working, zipcode_test_working, zipcode_train_working$V1, k = 4, l = 0, prob = FALSE, use.all = TRUE)
sum(knearn==zipcode_test_working$V1)
i <- im[,-1]
View(i)
View(zipcode_train_working)
klearn
summary(klearn)
summary(knearn)
test <- zipcode_test_working
test$predict <- knearn
View(test)
names(test)
test$z <- c(0, 1)[sapply(test$predict, as.numeric)]
View(test)
?aes
test$z <- c(3, 2)[sapply(test$predict, as.numeric)]
title = paste("k=", as.character(k), sep ="")
title = paste("k=", as.character(3), sep ="")
ggplot(data = test, aes(test[,-1])) + geom_point(aes(colour = predict), size = 0.5) + geom_contour(aes(z=z), colour = 'black', size = 0.1) + theme(legend.position = "none") + labs(title = title)
names(test)
KNN <- knn(train[,-1], test, train$V1, 3)
KNN <- knn(train[,-1], test, zipcode_train_working$V1, 3)
KNN <- knn(ipcode_train_working[,-1], test, zipcode_train_working$V1, 3)
KNN <- knn(zipcode_train_working[,-1], test, zipcode_train_working$V1, 3)
KNN <- knn(zipcode_train_working, test, zipcode_train_working$V1, 3)
KNN <- knn(zipcode_train_working, zipcode_test_working, zipcode_train_working$V1, 3)
KNN
test <- zipcode
test <- zipcode_test_working
test$predict <- KNN
test$z <- c(2, 3)[sapply(test$predict, as.numeric)]
View(test)
training <- knn(zipcode_train_working, zipcode_train_working, zipcode_train_working$V1, 3, l=0, prob = FALSE, use.all = TRUE)
sum(training==zipcode_train_working$V1)
nrow(test)
klist <- list(1,3,5,7,9,11,13,15)
for (i in klist){
i
}
klist[4]
i = klist[4]
View(i)
i
for(i in klist){print(as.numeric(i)}
for(i in klist){print(as.numeric(i))}
k = as.numeric(klist[4])
k = as.numeric(2)
knnplot <- function(train, test, k){
knn_training <- knn(train, train, train$V1, k, l=0, prob = FALSE, use.all = TRUE)
knn_testing <- knn(train, test, train$V1, k, l=0, prob = FALSE, use.all = TRUE)
training_error <-  sum(knn_training==train$V1)/nrow(train)
testing_error <- sum(knn_testing==test$V1)/nrow(test)
return(training_error, testing_error)
}
rm(klist)
rm(im)
rm(i)
rm(k)
emp <- data.frame()
emp$a <- c(2)
rm(emp)
emp.newdata <- 	data.frame(
emp_id = c (),
emp_name = c()
)
emp.data <- 	data.frame(
emp_id = c (1),
emp_name = c("jg")
)
emp.newdata <- rbind(emp.data, emp.newdata)
emp.newdata
x,y <- knnplot(zipcode_train_working, zipcode_test_working, 3)
x <- knnplot(zipcode_train_working, zipcode_test_working, 3)
knnplot <- function(train, test, k){
knn_training <- knn(train, train, train$V1, k, l=0, prob = FALSE, use.all = TRUE)
knn_testing <- knn(train, test, train$V1, k, l=0, prob = FALSE, use.all = TRUE)
training_error <-  sum(knn_training==train$V1)/nrow(train)
testing_error <- sum(knn_testing==test$V1)/nrow(test)
error <- data.frame(train = c(training_error), test = c(testing_error))
return(error)
}
x <- knnplot(zipcode_train_working, zipcode_test_working, 3)
x
tmperror <- data.frame(train = c(1,2,3,4,5,6), test = c(2,3,4,5,6,7))
tmperror
tmperror <- data.frame(k = c(1,2,3,4,5,6), train = c(1.1,2.4,3,4.3,5.5,6.1), test = c(2,3,4,5,6,7))
tmperror
x  <- seq(-2, 2, 0.05)
y1 <- pnorm(x)
y2 <- pnorm(x, 1, 1)
plot(x,y1,type="l",col="red")
lines(x,y2,col="green")
lines(x,y2,col="green")
plot.new()
plot(tmperror$k, tmperror$train, col = "green")
plot(tmperror$k, tmperror$train, type = "l",col = "green")
require(class)
knnplot <- function(train, test, kk){
knn_training <- knn(train, train, train$V1, kk, l=0, prob = FALSE, use.all = TRUE)
knn_testing <- knn(train, test, train$V1, kk, l=0, prob = FALSE, use.all = TRUE)
training_error <-  sum(knn_training==train$V1)/nrow(train)
testing_error <- sum(knn_testing==test$V1)/nrow(test)
tmperror <- data.frame(k = c(kk), train = c(training_error), test = c(testing_error))
return(error)
}
klist <- list(1,3,5,7,9,11,13,15)
error < data.frame(k=c(), train = c(), test = c())
for (i in klist){
tmperror <- knnplot(zipcode_train_working, zipcode_test_working, as.numeric(i))
error <- rbind(error, tmperror)
}
plot.new()
plot(tmperror$k, tmperror$train, type="l", col = "green")
lines(tmperror$k, tmperror$test, col= "red")
require(class)
knnplot <- function(train, test, kk){
knn_training <- knn(train, train, train$V1, kk, l=0, prob = FALSE, use.all = TRUE)
knn_testing <- knn(train, test, train$V1, kk, l=0, prob = FALSE, use.all = TRUE)
training_error <-  sum(knn_training==train$V1)/nrow(train)
testing_error <- sum(knn_testing==test$V1)/nrow(test)
tmperror <- data.frame(k = c(kk), train = c(training_error), test = c(testing_error))
return(tmperror)
}
klist <- list(1,3,5,7,9,11,13,15)
error < data.frame(k=c(), train = c(), test = c())
for (i in klist){
tmperror <- knnplot(zipcode_train_working, zipcode_test_working, as.numeric(i))
error <- rbind(error, tmperror)
}
plot.new()
plot(tmperror$k, tmperror$train, type="l", col = "green")
lines(tmperror$k, tmperror$test, col= "red")
errorr < data.frame(k=c(), train = c(), test = c())
require(class)
knnplot <- function(train, test, kk){
knn_training <- knn(train, train, train$V1, kk, l=0, prob = FALSE, use.all = TRUE)
knn_testing <- knn(train, test, train$V1, kk, l=0, prob = FALSE, use.all = TRUE)
training_error <-  sum(knn_training==train$V1)/nrow(train)
testing_error <- sum(knn_testing==test$V1)/nrow(test)
tmperror <- data.frame(k = c(kk), train = c(training_error), test = c(testing_error))
return(tmperror)
}
klist <- list(1,3,5,7,9,11,13,15)
error <- data.frame(k=c(), train = c(), test = c())
for (i in klist){
tmperror <- knnplot(zipcode_train_working, zipcode_test_working, as.numeric(i))
error <- rbind(error, tmperror)
}
plot.new()
plot(error$k, error$train, type="l", col = "green")
lines(error$k, error$test, col= "red")
View(error)
lines(error$k, error$test, col= "red")
plot.new()
plot(error$k, error$train, type="l", col = "green")
lines(error$k, error$test, col= "red")
error
View(tmperror)
knn_training <- knn(zipcode_train_working, zipcode_train_working, zipcode_train_working$V1, 4, l=0, prob = FALSE, use.all = TRUE)
training_error <-  sum(knn_training==train$V1)/nrow(train)
training_error <-  sum(knn_training==train$V1)/nrow(zipcode_train_working)
training_error <-  sum(knn_training==zipcode_train_working$V1)/nrow(zipcode_train_working)
sum(knn_training==zipcode_train_working$V1)
nrow(zipcode_train_working)
sum(knn_training==zipcode_train_working$V1)/nrow(zipcode_train_working)
knnplot <- function(train, test, kk){
knn_training <- knn(train, train, train$V1, kk, l=0, prob = FALSE, use.all = TRUE)
knn_testing <- knn(train, test, train$V1, kk, l=0, prob = FALSE, use.all = TRUE)
training_error <-  1 - sum(knn_training==train$V1)/nrow(train)
testing_error <- 1 - sum(knn_testing==test$V1)/nrow(test)
tmperror <- data.frame(k = c(kk), train = c(training_error), test = c(testing_error))
return(tmperror)
}
klist <- list(1,3,5,7,9,11,13,15)
error <- data.frame(k=c(), train = c(), test = c())
for (i in klist){
tmperror <- knnplot(zipcode_train_working, zipcode_test_working, as.numeric(i))
error <- rbind(error, tmperror)
}
plot.new()
plot(error$k, error$train, type="l", col = "green")
lines(error$k, error$test, col= "red")
View(error)
sum(knn_testing==test$V1)/nrow(test)
sum(knn_testing==test$V1)/nrow(test)
plot.new()
plot(error$k, error$train, type="l", col = "green")
lines(error$k, error$test, col= "red")
large_model <- lm(V1 ~ ., data = zipcode_train_working)
summary(large_model)
zipcode_train_working <- subset(zipcode_train, V1==2 | V1 == 3)
zipcode_test_working <- subset(zipcode_test, V1==2 | V1 == 3)
large_model <- lm(V1 ~ ., data = zipcode_train_working)
summary(large_model)
View(large_model)
distPred <- predict(large_model, zipcode_test_working)
actuals_preds <- data.frame(cbind(actuals=zipcode_test_working$V1, predicteds=distPred))
correlation_accuracy <- cor(actuals_preds)
View(correlation_accuracy)
View(error)
zipcode_train_working <- subset(zipcode_train, V1==2 | V1 == 3)
zipcode_test_working <- subset(zipcode_test, V1==2 | V1 == 3)
linear_model <- lm(V1 ~ ., data = zipcode_train_working)
distPred <- predict(large_model, zipcode_test_working)
actuals_preds <- data.frame(cbind(actuals=zipcode_test_working$V1, predicteds=distPred))
correlation_accuracy <- cor(actuals_preds)
View(correlation_accuracy)
View(actuals_preds)
round((3.254145))
x <- c(5.56, 7.39, 12.05, 13.10)
round(x, digits = 0)
distPred <- round(distPred, digits = 0)
actuals_preds <- data.frame(cbind(actuals=zipcode_test_working$V1, predicteds=distPred))
correlation_accuracy <- cor(actuals_preds)
View(correlation_accuracy)
View(actuals_preds)
linear_training_error <- 1 - sum(distPred==zipcode_train_working$V1)/nrow(test)
actuals_preds <- data.frame(cbind(actuals=zipcode_test_working$V1, predicteds=distPred))
View(actuals_preds)
actuals_preds <- data.frame(cbind(actual_digits=zipcode_test_working$V1, predicted_digits=distPred))
sum(actuals_preds$actual_digits==actuals_preds$predicted_digits)
sum(actuals_preds$actual_digits==actuals_preds$predicted_digits)/nrow(zipcode_test_working)
linear_training_pred <- predict(large_model, zipcode_train_working)
linear_training_frame <- data.frame(cbind(actual_digits=zipcode_train_working$V1, predicted_digits=linear_testing_pred))
linear_training_frame <- data.frame(cbind(actual_digits=zipcode_train_working$V1, predicted_digits=linear_training_pred))
linear_training_error <- 1 - sum(linear_training_frame$actual_digits == linear_training_frame$predicted_digits)/nrow(zipcode_train_working)
1 - sum(linear_training_frame$actual_digits == linear_training_frame$predicted_digits)/nrow(zipcode_train_working)
sum(linear_training_frame$actual_digits == linear_training_frame$predicted_digits)
View(linear_training_frame)
linear_model <- lm(V1 ~ ., data = zipcode_train_working)
linear_training_pred <- predict(linear_model, zipcode_train_working)
linear_training_pred <- round(linear_training_pred, digits =0)
linear_training_frame <- data.frame(cbind(actual_digits=zipcode_train_working$V1, predicted_digits=linear_training_pred))
View(linear_training_frame)
sum(linear_training_frame$actual_digits == linear_training_frame$predicted_digits)
linear_training_error <- 1 - sum(linear_training_frame$actual_digits == linear_training_frame$predicted_digits)/nrow(zipcode_train_working)
linear_testing_error <- 1 - sum(linear_testing_frame$actual_digits == linear_testing_frame$predicted_digits)/nrow(zipcode_test_working)
linear_testing_pred <- predict(linear_model, zipcode_test_working)
linear_testing_pred <- round(linear_testing_pred, digits =0)
linear_testing_frame <- data.frame(cbind(actual_digits=zipcode_test_working$V1, predicted_digits=linear_testing_pred))
linear_testing_error <- 1 - sum(linear_testing_frame$actual_digits == linear_testing_frame$predicted_digits)/nrow(zipcode_test_working)
predicted_grades <- predict(model_controlledData, d3_controlled)
model_controlledData <- lm(G1 ~ ., data = d3_controlled)
setwd("/Users/abhishekkumar/Documents/MS_UB/Fall_18/ESL506_StatisticalDataMiningI/HW1/student")
d1=read.table("student-mat.csv",sep=";",header=TRUE)
d2=read.table("student-por.csv",sep=";",header=TRUE)
d3_all = merge(d1,d2, all = TRUE)
d3_originalData <- d3_all[-c(32,33)]
d3_controlled <- d3_all[-c(20,22,29,32,33)]
save(d3_controlled, file = "controlled.Rda")
model_originalData <- lm(G1 ~ ., data = d3_originalData)
model_controlledData <- lm(G1 ~ ., data = d3_controlled)
predicted_grades <- predict(model_controlledData, d3_controlled)
actuals_preds <- data.frame(cbind(actual_grade=d3_controlled$G1, predicted_grade=predicted_grades))
correlation_accuracy <- cor(actuals_preds)
View(correlation_accuracy)
or(actuals_preds)
cor(actuals_preds)
model_controlledData <- lm(G1 ~ ., data = d3_controlled)
predicted_grades_controlled <- predict(model_controlledData, d3_controlled)
actuals_preds_controlled <- data.frame(cbind(actual_grade=d3_controlled$G1, predicted_grade=predicted_grades_controlled))
cor(actuals_preds_controlled)
model_originalData <- lm(G1 ~ ., data = d3_originalData)
predicted_grades_origData <- predict(model_controlledData, d3_controlled)
actuals_preds_origData <- data.frame(cbind(actual_grade=d3_controlled$G1, predicted_grade=predicted_grades_origData))
cor(actuals_preds_origData)
model_originalData <- lm(G1 ~ ., data = d3_originalData)
predicted_grades_origData <- predict(model_originalData, d3_originalData)
actuals_preds_origData <- data.frame(cbind(actual_grade=d3_originalData$G1, predicted_grade=predicted_grades_origData))
cor(actuals_preds_origData)
im <- matrix(as.numeric(zipcode_train_working[4,2:257]), nrow = 16, ncol = 16)
image(t(apply(-im,1,rev)),col=gray((0:32)/32))
im <- matrix(as.numeric(zipcode_train_working[4,2:257]), nrow = 16, ncol = 16)
image(t(apply(-im,1,rev)),col=gray((0:32)/32))
im <- matrix(as.numeric(zipcode_train_working[4,2:257]), nrow = 16, ncol = 16)
x1 <- image(t(apply(-im,1,rev)),col=gray((0:32)/32))
im <- matrix(as.numeric(zipcode_train_working[1,2:257]), nrow = 16, ncol = 16)
x2 <- image(t(apply(-im,1,rev)),col=gray((0:32)/32))
im <- matrix(as.numeric(zipcode_train_working[6,2:257]), nrow = 16, ncol = 16)
x3 <- image(t(apply(-im,1,rev)),col=gray((0:32)/32))
im <- matrix(as.numeric(zipcode_train_working[56,2:257]), nrow = 16, ncol = 16)
x4 <- image(t(apply(-im,1,rev)),col=gray((0:32)/32))
im <- matrix(as.numeric(zipcode_train_working[38,2:257]), nrow = 16, ncol = 16)
x5 <- image(t(apply(-im,1,rev)),col=gray((0:32)/32))
im <- matrix(as.numeric(zipcode_train_working[46,2:257]), nrow = 16, ncol = 16)
x6 <- image(t(apply(-im,1,rev)),col=gray((0:32)/32))
grid.arrange(x1, x2, x3, x4, x5, x6, ncol=3)
?grid.arrange
?image
im <- matrix(as.numeric(zipcode_train_working[4,2:257]), nrow = 16, ncol = 16)
x1 <- image(t(apply(-im,1,rev)),col=gray((0:32)/32))
im <- matrix(as.numeric(zipcode_train_working[1,2:257]), nrow = 16, ncol = 16)
x2 <- image(t(apply(-im,1,rev)),col=gray((0:32)/32))
im <- matrix(as.numeric(zipcode_train_working[6,2:257]), nrow = 16, ncol = 16)
x3 <- image(t(apply(-im,1,rev)),col=gray((0:32)/32))
im <- matrix(as.numeric(zipcode_train_working[56,2:257]), nrow = 16, ncol = 16)
x4 <- image(t(apply(-im,1,rev)),col=gray((0:32)/32))
im <- matrix(as.numeric(zipcode_train_working[38,2:257]), nrow = 16, ncol = 16)
x5 <- image(t(apply(-im,1,rev)),col=gray((0:32)/32))
im <- matrix(as.numeric(zipcode_train_working[46,2:257]), nrow = 16, ncol = 16)
x6 <- image(t(apply(-im,1,rev)),col=gray((0:32)/32))
plot(x1)
im <- matrix(as.numeric(zipcode_train_working[4,2:257]), nrow = 16, ncol = 16)
x1 <- image(t(apply(-im,1,rev)),col=gray((0:32)/32))
im <- matrix(as.numeric(zipcode_train_working[1,2:257]), nrow = 16, ncol = 16)
x2 <- image(t(apply(-im,1,rev)),col=gray((0:32)/32))
im <- matrix(as.numeric(zipcode_train_working[6,2:257]), nrow = 16, ncol = 16)
x3 <- image(t(apply(-im,1,rev)),col=gray((0:32)/32))
im <- matrix(as.numeric(zipcode_train_working[56,2:257]), nrow = 16, ncol = 16)
x4 <- image(t(apply(-im,1,rev)),col=gray((0:32)/32))
im <- matrix(as.numeric(zipcode_train_working[38,2:257]), nrow = 16, ncol = 16)
x5 <- image(t(apply(-im,1,rev)),col=gray((0:32)/32))
im <- matrix(as.numeric(zipcode_train_working[46,2:257]), nrow = 16, ncol = 16)
x6 <- image(t(apply(-im,1,rev)),col=gray((0:32)/32))
plot(error$k, error$test, type="l", col = "green")
lines(error$k, error$train, type="l", col = "red")
plot.new
plot.new()
lines(error$k, error$train, type="l", col = "red")
plot.new()
plot(error$k, error$train, type="l", col = "green")+
lines(error$k, error$test, col = "red")
plot.new()
plot(error$k, error$train, type="l", col = "green")+
plot(error$k, error$test, col = "red")
g <- ggplot(error, aes(error$k))
g <- g + geom_line(aes(y=error$train), colour="red")
g <- g + geom_line(aes(y=error$test), colour="green")
g
im <- matrix(as.numeric(zipcode_train_working[46,2:257]), nrow = 16, ncol = 16)
x6 <- image(t(apply(-im,1,rev)),col=gray((0:32)/32))
im <- matrix(as.numeric(zipcode_train_working[46,2:257]), nrow = 16, ncol = 16)
x6 <- image(t(apply(-im,1,rev)),col=gray((0:16)/16))
im <- matrix(as.numeric(zipcode_train_working[46,2:257]), nrow = 16, ncol = 16)
x6 <- image(t(apply(-im,1,rev)),col=gray((0:32)/32))
?image
?Boston
library(MASS)
?Boston
subLT8 <- subset(Boston, rm>8)
ggplot(data = subLT8, aes(x= subLT8$medv))+GeomVline()
ggplot(data = subLT8, aes(x= subLT8$medv))+ geom_abline()
ggplot(data = subLT8, aes(x=crim))+ geom_histogram(bins = 100)+ scale_x_continuous(breaks = seq(0, 90, 5))
ggplot(data = subLT8, aes(x=crim))+ geom_histogram(bins = medv)+ scale_x_continuous(breaks = seq(0, 90, 5))
names(Boston)
ggplot(data = subLT8, aes(x=medv))+ geom_histogram(bins = 100)+ scale_x_continuous(breaks = seq(0, 90, 5))
ggplot(data = subLT8, aes(x=medv, y = age))+ geom_point()
summary(Boston$age)
summary(Boston$medv)
subLT8 <- subset(Boston, rm>8)
ggplot(data = subLT8, aes(x=medv, y = age))+ geom_point()
summary(Boston$age)
summary(Boston$medv)
subLT8 <- subset(Boston, rm>8)
ggplot(data = subLT8, aes(x=medv, y = age))+ geom_point()
summary(Boston$age)
summary(Boston$medv)
names(Boston)
ggplot(data = subLT8, aes(x=medv, y = ptratio))+ geom_point()
summary(Boston$ptratio)
ggplot(data = subLT8, aes(x=medv, y = black))+ geom_point()
summary(Boston$black)
ggplot(data = subLT8, aes(x=medv, y = crim))+ geom_point()
summary(Boston$crim)
View(zipcode_test)
ggplot(data = subLT8, aes(x=tax, y = crim))+ geom_point()
summary(Boston$taxx)
summary(Boston$tax)
subLT8 <- subset(Boston, rm>8)
a <- ggplot(data = subLT8, aes(x=medv, y = age))+ geom_point()
b <- ggplot(data = subLT8, aes(x=tax, y = crim))+ geom_point()
grid.arrange(a ,b, ncol =1)
subLT8 <- subset(Boston, rm>8)
a <- ggplot(data = subLT8, aes(x=medv, y = age))+ geom_point()
b <- ggplot(data = subLT8, aes(x=tax, y = crim))+ geom_point()
grid.arrange(a ,b, ncol =1)
subLT8 <- subset(Boston, rm>8)
a <- ggplot(data = subLT8, aes(x=medv, y = age))+ geom_point()
b <- ggplot(data = subLT8, aes(x=tax, y = crim))+ geom_point()
grid.arrange(a ,b, ncol =2)
fit2 <- lm(G1~ .:failures,data=StudentData)
summary(fit2)
fit2 <- lm(G1~ .:failures,data=d3_controlled)
summary(fit2)
fit2 <- lm(G1~ .:schoolsup,data=d3_controlled)
summary(fit2)
fit2 <- lm(G1~ .:higher,data=d3_controlled)
summary(fit2)
fit2 <- lm(G1~ .:studytime,data=d3_controlled)
summary(fit2)
fit2 <- lm(G1~ .:paid,data=d3_controlled)
summary(fit2)
fit2 <- lm(G1~ .:school,data=d3_controlled)
summary(fit2)
fit2 <- lm(G1~ .:Mjob,data=d3_controlled)
summary(fit2)
fit2 <- lm(G1~ .:Fjob,data=d3_controlled)
summary(fit2)
fit2 <- lm(G1~ .*schoolsup,data=d3_controlled)
summary(fit2)
fit2 <- lm(G1~ .*higher,data=d3_controlled)
summary(fit2)
fit2 <- lm(G1~ .*school,data=d3_controlled)
summary(fit2)
fit2 <- lm(G1~ .*Mjob,data=d3_controlled)
summary(fit2)
fit2 <- lm(G1~ .*Mjob, data=d3_controlled)
summary(fit2)
fit2 <- lm(G1~ .*Medu, data=d3_controlled)
summary(fit2)
predicted_grades_controlled <- predict(fit2, d3_controlled)
actuals_preds_controlled <- data.frame(cbind(actual_grade_cont=d3_controlled$G1, predicted_grade_cont=predicted_grades_controlled))
cor(actuals_preds_controlled)
failed_stud.x <- subset(d3, failures.x>0)
failed_stud.x <- subset(d3_controlled, failures.x>0)
failed_stud.x <- subset(d3_controlled, failures>0)
ggplot(failed_stud.x, aes(x = as.factor(schoolsup), y = G1))+ geom_boxplot()
by(failed_stud.x$G1, failed_stud$schoolsup, summary)
by(failed_stud.x$G1, failed_stud.x$schoolsup, summary)
einsteins.x <- subset(d3_controlled, studytime<=2)
einsteins.x <- subset(einsteins.x, G1>=18)
View(einsteins.x)
subset(einsteins.x, c(9,10,16))
einsteins.x[c(9,10)]
einsteins.x[c(9,10,16)]
names(einsteins.x)
einsteins.x[c(9,10,16,28)]
View(error)
ggplot(data = subLT8, aes(x=tax, y = crim))+ geom_point(aes(alpha = 0.3))
